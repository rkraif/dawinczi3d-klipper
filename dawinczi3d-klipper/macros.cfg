########################################
## MACROS
########################################

[pause_resume]


[gcode_macro Corner_Adjust]
gcode:
    SCREWS_TILT_CALCULATE


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true

  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}

  TURN_OFF_HEATERS
  M106 S0
  CANCEL_PRINT_BASE


[gcode_macro G29]
gcode:

    BED_MESH_CLEAR
    BED_MESH_CALIBRATE ADAPTIVE=1
    BED_MESH_PROFILE SAVE=mesh0


[gcode_macro PID_BED]
description: PID Tune for the Bed
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %} 
  PID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}
  TURN_OFF_HEATERS
  SAVE_CONFIG


[gcode_macro PID_EXTRUDER]
description: PID Tune for the Extruder
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP|default(215)|float %} 
  PID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}
  TURN_OFF_HEATERS
  SAVE_CONFIG


[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg

  {% set x_park = printer.toolhead.axis_maximum.x|float - 1.0 %} #was 5
  {% set y_park = printer.toolhead.axis_maximum.y|float - 1.0 %} #was 5
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

################################################################################################ Disable when Orbiter filament sensor instaled

#[gcode_macro PAUSE]
#description: Pause the actual running print
#rename_existing: PAUSE_BASE
#gcode:
#  PAUSE_BASE
#  _TOOLHEAD_PARK_PAUSE_CANCEL

#[gcode_macro RESUME]
#description: Resume the actual running print
#rename_existing: RESUME_BASE
#gcode:
#  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
#
#  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
#  #### get VELOCITY parameter if specified ####
#  {% if 'VELOCITY' in params|upper %}
#    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
#  {%else %}
#    {% set get_params = "" %}
#  {% endif %}
#  ##### end of definitions #####
#  {% if printer.extruder.can_extrude|lower == 'true' %}
#    M83
#    G1 E{extrude} F2100
#    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
#  {% else %}
#    {action_respond_info("Extruder not hot enough")}
#  {% endif %}

#  RESUME_BASE {get_params}

##################################################################################################

[gcode_macro HEAT]
description: Heats up the extruder to get ready for Filament Change
gcode:
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
  {% set Z = params.Z|default(50)|float %}
  {% set X = params.X|default(202)|float %}
  {% set Y = params.Y|default(202)|float %}
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
  HOME_CHECK
  G1 Z{Z} F500
  G1 X{X} Y{Y} F6000

 
[gcode_macro COOL]
description: Turns off all heaters
gcode:
  TURN_OFF_HEATERS


[gcode_macro PARK]
description: Park tool head on filament stop
gcode:
  G1 Y415 F9500
  M400
  G1 X455 Z0 F9500 


[gcode_macro PREHEAT]
description: Preheats extruder and bed for PLA printing, extruder set to 150 to prevent filament leaking while homing etc
gcode:
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}
  {% set BED_TEMP = params.BED_TEMP|default(55)|float %}
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}


[gcode_macro BED_FULL]
description: Mesh full bed
gcode:
  G28
  G29


[gcode_macro START_PRINT]
description: Start Print settings
gcode:
  {% set BED_TEMP = params.BED_TEMP|default(90)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(255)|float %}
  M140 S{BED_TEMP} ; set bed temperature
  M190 S{BED_TEMP} ; wait for bed temp to stabilize
  G4 P300000
  G28
  Z_TILT_ADJUST
  G28 Z
#  M104 S150 ; set temporary nozzle temp to prevent oozing during homing and auto bed leveling
  G29
  G1 X455 Y0 Z0 F30000
  M109 S{EXTRUDER_TEMP} ; set and wait for nozzle temperature
  G92 E0.0
  BED_MESH_PROFILE LOAD=mesh0
  G1 Z2.0 F9500 ; Move Z Axis up little to prevent scratching of Heat Bed
  G1 Y0.1 X305 Z0.3 F9500.0 ; Move to start position
  G1 Y0.1 X105.0 Z0.3 F1500.0 E15 ; Draw the first line
  G1 Y0.4 X105.0 Z0.3 F9500.0 ; Move to side a little
  G1 Y0.4 X305 Z0.3 F1500.0 E30 ; Draw the second line
  G92 E0 ; Reset Extruder
  G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
  G1 Y5 X305 Z0.3 F9500.0 ; Move over to prevent blob squish

# ##### INPUT TO SICER #####
# M104 S0 ; Stops OrcaSlicer from sending temp waits separately
# M140 S0
# START_PRINT EXTRUDER_TEMP=[first_layer_temperature] BED_TEMP=[first_layer_bed_temperature]

[gcode_macro END_PRINT]
description: End print code
gcode:
  G91 ;Relative positioning
  G1 E-2 F2700 ;Retract a bit
  G1 E-6 Z0.2 F2400 ;Retract and raise Z
  G1 X5 Y5 F3000 ;Wipe out
  G1 Z10 ;Raise Z more
  BED_MESH_CLEAR
  BED_MESH_PROFILE REMOVE=mesh0
  G90 ;Absolute positioning

#  G1 X419 Y420 Z0 F7500 ; present print
  G1 Y415 F9500
  M400
  G1 X455 Z0 F30000
  M106 S0 ;Turn-off fan
  M104 S0 ;Turn-off hotend
  M140 S0 ;Turn-off bed
  M118 Print Done!
  M84 ;Disable all steppers


[gcode_macro calibrate_shaper_X]
description: test resonances in x direction / of the hotend
gcode:
  M118 DO NOT TOUCH THE PRINTER UNTIL DONE!!!
  G28		#or g28 if you dont have a macro to check if you orinter is homed
  SHAPER_CALIBRATE AXIS=x
  RUN_SHELL_COMMAND CMD=adxl_x
  M118 Test done
  SAVE_CONFIG

 
[gcode_macro calibrate_shaper_Y]
description: test resonances in y direction / of the heated bed
gcode:
  M118 DO NOT TOUCH THE PRINTER UNTIL DONE!!!
  G28  		#or g28
  SHAPER_CALIBRATE AXIS=y
  RUN_SHELL_COMMAND CMD=adxl_y
  M118 Test done
  SAVE_CONFIG


[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}
  